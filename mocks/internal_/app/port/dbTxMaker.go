// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	port "FaisalBudiono/go-jwt/internal/app/port"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// dbTxMaker is an autogenerated mock type for the dbTxMaker type
type dbTxMaker struct {
	mock.Mock
}

type dbTxMaker_Expecter struct {
	mock *mock.Mock
}

func (_m *dbTxMaker) EXPECT() *dbTxMaker_Expecter {
	return &dbTxMaker_Expecter{mock: &_m.Mock}
}

// BeginTx provides a mock function with given fields: ctx
func (_m *dbTxMaker) BeginTx(ctx context.Context) (port.DBTx, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for BeginTx")
	}

	var r0 port.DBTx
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (port.DBTx, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) port.DBTx); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(port.DBTx)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// dbTxMaker_BeginTx_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BeginTx'
type dbTxMaker_BeginTx_Call struct {
	*mock.Call
}

// BeginTx is a helper method to define mock.On call
//   - ctx context.Context
func (_e *dbTxMaker_Expecter) BeginTx(ctx interface{}) *dbTxMaker_BeginTx_Call {
	return &dbTxMaker_BeginTx_Call{Call: _e.mock.On("BeginTx", ctx)}
}

func (_c *dbTxMaker_BeginTx_Call) Run(run func(ctx context.Context)) *dbTxMaker_BeginTx_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *dbTxMaker_BeginTx_Call) Return(_a0 port.DBTx, _a1 error) *dbTxMaker_BeginTx_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *dbTxMaker_BeginTx_Call) RunAndReturn(run func(context.Context) (port.DBTx, error)) *dbTxMaker_BeginTx_Call {
	_c.Call.Return(run)
	return _c
}

// newDbTxMaker creates a new instance of dbTxMaker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newDbTxMaker(t interface {
	mock.TestingT
	Cleanup(func())
}) *dbTxMaker {
	mock := &dbTxMaker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
